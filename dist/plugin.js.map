{"mappings":";;;;;;AACA,MAAM,gCAAU;IACZ,cAAc;AAClB;AACA,SAAS,sCAAgB,EAAE;IACvB,OAAO;QACH,UAAU;QACV,IAAI,GAAG;QACP,QAAQ,GAAG;QACX,OAAO,GAAG;QACV,KAAK,GAAG;QACR,UAAU;IACd;AACJ;AACA,eAAe,qCAAe,SAAS,EAAE,OAAO;IAC5C,OAAO;QACH,KAAK,UAAU;IACnB;AACJ;AACA,eAAe;IACX,MAAM,cAAc,IAAI;IACxB,MAAM,cAAc,IAAI,KAAK,YAAY,eAAe,GAAG;IAC3D,MAAM,cAAc,KAAK,KAAK,AAAC,CAAA,AAAC,CAAA,cAAc,WAAU,IAAM,WAAuB,YAAY,WAAW,CAAA,IAAK;IAEjH,IAAI,WAAW,EAAE;IAEjB,IAAK,IAAI,OAAO,GAAG,OAAO,aAAa,OACnC,SAAS,KAAK;QACV,OAAO,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC;QACrB,MAAM;YACF;gBACI,IAAI;gBACJ,MAAM;gBACN,MAAM;gBACN,OAAO;YACX;YACA;gBACI,IAAI;gBACJ,MAAM;gBACN,MAAM;gBACN,OAAO;YACX;SACH;IACL;IAEJ,SAAS;IACT,OAAO;AACX;AACA,eAAe,uCAAiB,WAAW;IACvC,MAAM,OAAO,AAAC,CAAA,MAAM,CAAA,GAAA,sCAAI,EAAE,IAAI,CAAC,4DAA4D,EAAE,YAAY,KAAK,CAAC,EAAE;iBAC7G;IACJ,EAAC,EAAG,KAAK;IACT,IAAI,YAAY,OAAO,yBACnB,OAAO;QACH,OAAO;QACP,WAAW,KAAK,sBAAsB,IAAI;IAC9C;SAEA,OAAO;QACH,OAAO;QACP,WAAW,KAAK,eAAe,IAAI;IACvC;AAGR;AAEA,iBAAiB;IACb,UAAU;IACV,QAAQ;IACR,SAAS;IACT,qBAAqB;QAAC;KAAQ;IAC9B,QAAQ;IACR,cAAc;oBACd;sBACA;iBACA;AACJ","sources":["src/index.ts"],"sourcesContent":["import axios from \"axios\";\nconst headers = {\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36\",\n};\nfunction formatMusicItem(it) {\n    return {\n        platform: '881903',\n        id: it.song_id,\n        artist: it.singer_name,\n        title: it.song_name,\n        url: it.audio_url,\n        duration: 30,\n    };\n}\nasync function getMediaSource(musicItem, quality) {\n    return {\n        url: musicItem.url,\n    };\n}\nasync function getTopLists() {\n    const currentDate = new Date();\n    const startOfYear = new Date(currentDate.getFullYear(), 0, 1);\n    const weeksInYear = Math.ceil(((currentDate - startOfYear) / (1000 * 60 * 60 * 24) + startOfYear.getDay() + 1) / 7);\n\n    let topLists = [];\n\n    for (let week = 1; week < weeksInYear; week++) {\n        topLists.push({\n            title: `第${week}周排行榜`,\n            data: [\n                {\n                    id: \"songSpecialityDetails\",\n                    type: \"playlist\",\n                    week: week,\n                    title: \"903專業推介\",\n                },\n                {\n                    id: \"songGapDetails\",\n                    type: \"playlist\",\n                    week: week,\n                    title: \"903豁達推介\",\n                },\n            ],\n        });\n    }\n    topLists.reverse();\n    return topLists;\n}\nasync function getTopListDetail(topListItem) {\n    const resp = (await axios.get(`https://www.881903.com/api/chart/songdetails?year=2024&week=${topListItem.week}`, {\n        headers,\n    })).data.response;\n    if (topListItem.id === \"songSpecialityDetails\") {\n        return {\n            isEnd: true,\n            musicList: resp.songSpecialityDetails.map(formatMusicItem),\n        };\n    } else {\n        return {\n            isEnd: true,\n            musicList: resp.songGapDetails.map(formatMusicItem),\n        };\n    }\n\n}\n\nmodule.exports = {\n    platform: \"商业电台排行榜\",\n    author: \"imYip\",\n    version: \"0.0.1\",\n    supportedSearchType: [\"music\"],\n    srcUrl: \"https://fastly.jsdelivr.net/gh/imyip/MusicFreePlugin-881903@master/dist/plugin.js\",\n    cacheControl: \"no-cache\",\n    getMediaSource,\n    getTopListDetail,\n    getTopLists,\n};\n"],"names":[],"version":3,"file":"plugin.js.map"}